@model IEnumerable<tabla66.Models.Show>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>





<p>
    @Html.ActionLink("Create New", "Create")
</p>
@for (int i = 0; i < Model.Select(m => m.Channel_id).Distinct().Count(); i++)
{
    <div class="tablediv">
        <h3>Kanal @(i + 1)</h3>
        <table class="table">

            @foreach (var item in Model)
            {
                var className = "";
                if (item.Start_time + item.Duration < DateTime.Now)
                { className = "passedshow"; }
                else if (item.Start_time < DateTime.Now && item.Start_time + item.Duration > DateTime.Now)
                { className = "ongoingshow"; }
                else
                { className = null; }


                if (item.Channel_id == i + 1)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Start_time.TimeOfDay)
                        </td>
                        <td class="btn btn-primary @className" id="@item.Id" type="button" data-toggle="modal" data-target="#exampleModal">
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
}
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" data-myvalue="trouducul" data-myvar="bisbis">
    Launch demo modal 1
</button>

<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" data-myvalue="troudbal" data-bb="troudbal">
    Launch demo modal 2
</button>


<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                <span id="modal-myvalue"></span> <span id="modal-myvar"></span> <span id="modal-bb"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    // data-* attributes to scan when populating modal values
    var ATTRIBUTES = ['myvalue', 'myvar', 'bb'];

    $('[data-toggle="modal"]').on('click', function (e) {
        // convert target (e.g. the button) to jquery object
        var $target = $(e.target);
        // modal targeted by the button
        var modalSelector = $target.data('target');

        // iterate over each possible data-* attribute
        ATTRIBUTES.forEach(function (attributeName) {
            // retrieve the dom element corresponding to current attribute
            var $modalAttribute = $(modalSelector + ' #modal-' + attributeName);
            var dataValue = $target.data(attributeName);

            // if the attribute value is empty, $target.data() will return undefined.
            // In JS boolean expressions return operands and are not coerced into
            // booleans. That way is dataValue is undefined, the left part of the following
            // Boolean expression evaluate to false and the empty string will be returned
            $modalAttribute.text(dataValue || '');
        });
    });
});</script>